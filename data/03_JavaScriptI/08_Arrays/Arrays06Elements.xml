<file name="Arrays06Elements" title="Array Elements" toc="ArraysManTOC">
    <img class="md-img" src="resource/images/Array01.png" alt="First Array Image"/>
    <img class="md-img" src="resource/images/Array02.png" alt="Second Array Image"/>
    <img class="md-img" src="resource/images/Array03.png" alt="Third Array Image"/>
    <br/>

    <h2>
        JavaScript arrays have a variety of methods that allow for manipulation of the array.
        In this lesson, we will cover some of the most commonly used methods.
    </h2>

    <bullet id="adding">
        <h3>Adding Elements</h3>
    </bullet>

    <bullet indent="indent-star">
        The <strong>push</strong> and <strong>unshift</strong> methods can be used to add items to an array.
    </bullet>

    <bullet indent="indent-star">
        The primary difference is that push adds an item to the end of an array, and unshift adds an
        item to the beginning of an array.
    </bullet>

    <bullet indent="indent-star">
        <h3>Example</h3>
        <text>
            var daysOfTheWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday'];<br/>

            console.log(daysOfTheWeek);
            // ['Monday', 'Tuesday', 'Wednesday', 'Thursday']<br/>

            // let's add 'Sunday' to the beginning of the week
            daysOfTheWeek.unshift('Sunday');<br/>

            console.log(daysOfTheWeek);
            // ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday']<br/>

            // let's add 'Friday' and 'Saturday' to the end of the week
            daysOfTheWeek.push('Friday', 'Saturday');<br/>

            console.log(daysOfTheWeek);
            // ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
        </text>
    </bullet>

    <bullet indent="indent-star">
        Notice that you can <strong>push</strong> or <strong>unshift</strong> one or more items,
        separated by commas, onto an array.
    </bullet>

    <bullet indent="indent-star">
        <h3>Demo It:</h3>
    </bullet>

    <bullet indent="indent-star">
        Both <strong>push</strong> and <strong>unshift</strong> will modify the original array, and return a
        number, the new length of the array, not the new array.<br/>
        <text>
            var fruits = ["Banana", "Orange", "Apple", "Mango"];
            console.log(fruits.length);
            fruits.push('pineapple', 'apple');
            fruits.unshift('peaches');
            console.log(fruits.length);
        </text>
    </bullet>

    <bullet indent="indent-star">
        <h3>Demo It:</h3>
    </bullet>

    <bullet indent="indent-star">
        <h2>MINI LAB</h2>
        <ul>
            <li>Create an Array with the five weekdays.</li>
            <li>Write the size to the console.</li>
            <li>Add Sunday to the front of the array.</li>
            <li>Add Saturday to the end of the array.</li>
            <li>Write array values and the new size to the console.</li>
        </ul>
    </bullet>

    <bullet id="removing">
        <h3>Removing Elements</h3>
    </bullet>

    <bullet indent="indent-star">
        The <strong>pop</strong> and <strong>shift</strong> methods can be used to remove items from an array.
        Both methods will return the removed item.
    </bullet>

    <bullet indent="indent-star">
        <h3>Example</h3>
        <text>
            var todoList = ['Take out the trash', 'Clean the car', 'Pay the bills'];

            console.log('My todo list:');
            console.log(todoList);
            // ['Take out the trash', 'Clean the car', 'Pay the bills']

            console.log('Completing the last item: ' + todoList[todoList.length - 1]);

            // let's remove the last item
            var removedItem = todoList.pop();

            // log what we did
            console.log('Task complete: ' + removedItem);

            console.log(todoList);
            // ['Take out the trash', 'Clean the car']

            console.log('Completing the first item: ' + todoList[0]);

            // let's remove the first item
            var doneItem = todoList.shift();

            // log what we did
            console.log('Task complete: ' + doneItem);

            console.log(todoList);
            // ['Clean the car']
        </text>
    </bullet>

    <bullet indent="indent-star">
        Notice how the item that is being removed from the array is returned as the result of the
        <strong>pop</strong> and <strong>shift</strong> methods.
    </bullet>

    <bullet indent="indent-star">
        <h3>Demo It:</h3>
    </bullet>

    <bullet indent="indent-star">
        <h2>MINI LAB</h2>
        <ul>
            <li>Create an Array with the five elements.</li>
            <li>Write the array to the console.</li>
            <li>Pop the last element and write it to the console.</li>
            <li>Remove the first element from the array and write it to the console.</li>
            <li>Write the array to the console.</li>
        </ul>
    </bullet>

    <bullet id="locating">
        <h3>Locating Array Elements</h3>
    </bullet>

    <bullet indent="indent-star">
        Before an array is manipulated, it is sometimes useful to find the index of a particular item. The
        <strong>indexOf</strong> and <strong>lastIndexOf</strong> array methods provide this capability.
    </bullet>

    <bullet indent="indent-star">
        The <strong>indexOf</strong> method starts searching from the beginning of an array and will return
        the first occurrence of what you are looking for.
    </bullet>

    <bullet indent="indent-star">
        The <strong>lastIndexOf</strong> starts at the end of the array and works backwards.
    </bullet>

    <bullet indent="indent-star">
        <h3>Example</h3>
        <text>
            var colors = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet', 'red'];

            var index = colors.indexOf('green');
            console.log(index);
            // 3

            index = colors.indexOf('red');
            console.log(index);
            // 0

            index = colors.lastIndexOf('red');
            console.log(index);
            // 7
        </text>
    </bullet>

    <bullet indent="indent-star">
        <h3>Demo It:</h3>
    </bullet>

    <bullet indent="indent-star">
        <h2>MINI LAB</h2>
        <text>var colors = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet', 'red'];</text>
        <ul>
            <li>Write the index of indigo to an alert.</li>
        </ul>
    </bullet>

    <strong>Next:</strong>
    <a href="./Arrays07Slicing.html" class="btn btn-info" >Slicing an Array</a>
</file>