<file name="JQuerySelectors" title="JQuery Selectors" toc="JQuerySelectorsTOC">
    <img class="md-img" src="resource/images/JQuery01.png" alt="First J Query Image"/>
    <img class="md-img" src="resource/images/JQuery02.jpeg" alt="Second J Query Image"/>
    <img class="md-img" src="resource/images/JQuery03.jpeg" alt="Third J Query Image"/>
    <br/><br/>
    <h1 style="margin-left: 2em;">jQuery Selectors</h1>
    jQuery makes selecting elements in the DOM very simple and has a powerful and optimized selector engine.

    <bullet>
        HThough there are many types of selectors available through jQuery, we will be concentrating on the basic
        (and most commonly used) selectors: <br/>
        <img class="lg-img" src="resource/images/JQuery04.png" alt="Fourth J Query Image"/>
    </bullet>

    <bullet>
        You might notice that jQuery selectors look very similar to CSS selectors. That's intentional! Part of the
        power of jQuery is that it allows us to write (almost all) CSS selectors in our JavaScript to manipulate
        the DOM.
    </bullet>

    <bullet>
        The general syntax for manipulating elements with jQuery selectors is: <br/>
        <text>$('selector')</text>
    </bullet>

    <bullet>
        There are several important things to note here:
    </bullet>

    <ul>
        <li><bullet>The selector is written inside a string</bullet></li>
        <li><bullet>The string is inside of <b>$()</b>, which is just calling a function named <b>$</b></bullet></li>
        <li><bullet>This will return us a jQuery object</bullet></li>
    </ul>

    <bullet>
        <b>$</b> is a valid identifier in javascript, which means we can name our functions or variables $ (although
        you probably shouldn't). $ is a commonly used shorthand for jQuery, and using either one will accomplish the
        same thing. So these two code blocks are functionally identical: <br/>
        <text>$('selector')</text>
        <text>jQuery('selector')</text>
    </bullet>

    <bullet>
        All selector expressions return us a jQuery object, which is just an object that represents zero or
        more HTML elements, with all of the methods of jQuery attached to it. We will learn about these methods
        in greater detail in future lessons.
    </bullet>

    <bullet>
        For now, we need to know the basics of two methods: <br/>
        <ul>
            <li>
                <bullet>
                    <b>.html</b>: returns the HTML contents of selected element or the first element in a collection.
                    Similar to the <b>innerHTML</b> property we previously covered.
                </bullet>
            </li>
            <li>
                <bullet>
                    <b>.css</b>: allows us to change CSS properties for a given element or elements. Similar to the
                    <b>style</b> property previously discussed.
                </bullet>
            </li>
        </ul>
    </bullet>

    <div id="id"></div>
    <h2 class="subTitle">ID Selector</h2>

    <bullet>
        The syntax for selecting an element by id is: <br/>
        <text>$('#some-id');</text>
    </bullet>

    <bullet>
        To demonstrate this, we will start with a basic page: <br/>
        <text>|||lth1 id="codeup"|||gtHello Codeup|||lt/h1|||gt</text>

        Next, let's add some JavaScript that uses jQuery to alert the contents of the <b>h1</b> element. <br/>
        <text>
            var contents = $('#codeup').html();
            alert(contents);
        </text>
    </bullet>

    <bullet>DEMO by select by id</bullet>

    <bullet>
        <b>Mini Lab:</b>
        <ul>
            Copy the code from the demo
            Add a paragraph with the id 'p1' that says, "JQuery is cool."
            Use the id selector to change it to say, "JQuery Rocks!"
        </ul>
    </bullet>

    <div id="class">Class Selector</div>
    <h1></h1>

    <bullet>
        Classes, unlike ids, can be used multiple times within a document. Selecting elements by class is a simple
        way to manipulate multiple DOM elements at one time.
    </bullet>

    <bullet indent="indent-star">
        Consider the following HTML with several elements with the same class name. <br/>
        <text tid="t1"></text>
    </bullet>

    <bullet indent="indent-star">
        We will add some jQuery to select all the elements with a class of important and use the .css method
        to change the background color to yellow. <br/>
        <text>$('.important').css('background-color', 'yellow');</text>
    </bullet>

    <bullet>Demo</bullet>

    <bullet>
        <b>Mini Lab:</b>
        <ul>
            Copy the code from the demo
            use the class selector to change the background color of the "not-important" class to green.
        </ul>
    </bullet>

    <bullet>
        <b>JS Bin</b>
        Thr curriculum has examples using a site called JS Bin that you can use for testing things. <br/>
        <a href="http://jsbin.com/topupe/1/edit?js,output" class="green" Target="blank">
            JS Bin example</a>
    </bullet>

    <div id="element"></div>
    <h2>Element Selector</h2>

    <bullet>
        Selecting elements by <b>id</b> and <b>class</b> is very convenient, but sometimes we need to get all the elements that
        are of the same type. The element selector allows us to select elements based on their tag name.
    </bullet>

    <bullet>
        We can use a simple CSS selector in our call to jQuery: <br/>
        <text>$('tag_name')</text>

        For example, we could get all the paragraph elements like this: <br/>
        <text>$('p')</text>
    </bullet>

    <bullet>
        Looking at our previous example HTML page: <br/>
        <text tid="t2"></text>
    </bullet>

    <bullet>
        We could make all of our paragraph fonts larger using jQuery. Later, when we learn about events, we
        could create buttons to increase and decrease font size. <br/>
        <text>$('p').css('font-size', '14px');</text>
    </bullet>

    <bullet>
        Demo
    </bullet>

    <bullet>
        <b>Mini Lab:</b>
        <ul>
            Copy the code from the demo
            use the 'h3' tag selector to change h3 text to red.
        </ul>
    </bullet>

    <div id="multiple"></div>
    <h2>Multiple Selector</h2>

    <bullet>
        Sometimes we want to select multiple different elements using different selectors. While we could
        create a different selector for each, jQuery allows us to use multiple selectors at one time to get a
        single result.
    </bullet>

    <bullet>
        We can use the multiple selector by separating our selectors by commas: <br/>
        <text>$("selector1, selector2, ...")</text>

        If we wanted to get all the elements with a class of important and all paragraph elements,
        we could use this selector: <br/>
        <text>$('.important, p')</text>
        <b>NOTICE: </b>The entire selector goes inside one set of quotes.
    </bullet>

    <bullet>
        Going back to our example HTML page, we could select all elements with a class of important
        and all paragraph elements and make their background color yellow: <br/>
        <text tid="t3"></text>
        <text>$('.important, p').css('background-color', '#FF0');</text>
    </bullet>

    <bullet>
        Demo
    </bullet>

    <bullet>
        <b>Mini Lab:</b>
        <ul>
            Change the h1 and h2 background colors to blue.
        </ul>
    </bullet>

    <div id="all"></div>
    <h2>The All Selector</h2>

    <bullet>
        If we want to select all the elements on a page, we can use the <i>all selector</i>:
    </bullet>

    <bullet>
        A common use is to put a border around every element to help see the layout of a page. We could create
        a thin red line around all of our elements using the all selector and some CSS: <br/>
        <text>$('*').css('border', '1px solid #F00');</text>
    </bullet>

    <bullet>
        Demo
    </bullet>

    <bullet>
        <b>Mini Lab</b>
        Put a dashed border around every page element.
    </bullet>

    <div id="review"></div>
    <h2>Review</h2>

    <bullet>What is the syntax for an ID Selector?</bullet>
    <bullet indent="indent-star"><text>#id</text></bullet>

    <bullet>What is the syntax for an Class Selector?</bullet>
    <bullet indent="indent-star"><text>.class</text></bullet>

    <bullet>What is the syntax for an Element Selector?</bullet>
    <bullet indent="indent-star"><text>element</text></bullet>

    <bullet>What is the syntax for an Multiple Selector?</bullet>
    <bullet indent="indent-star"><text>selector1[, selector2[, ...]]</text></bullet>

    <bullet>What is the syntax for the All Selector?</bullet>
    <bullet indent="indent-star"><text>*</text></bullet>

    <bullet>Can <hl>.html()</hl> and <hl>.css()</hl> be used to get values as well as change values?</bullet>
    <bullet indent="indent-star">yes</bullet>

    <bullet>What does the <hl>.html()</hl> method change?</bullet>
    <bullet indent="indent-star">The element's <b>innerHTML</b> value.</bullet>

    <bullet>What does the <hl>.css()</hl> method change?</bullet>
    <bullet indent="indent-star">The element's <b>style</b> settings.</bullet>

    <a href="https://java.codeup.com/jquery/selectors/#further-reading" class="btn btn-info" Target="blank">
        Further Reading and Exercises</a>
</file>
